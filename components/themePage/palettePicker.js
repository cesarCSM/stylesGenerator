class palettePicker extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const e=this.getAttribute("value");this.shadowRoot.innerHTML=`${paletteCompStyles.join("")}\n    <article id="pal-main">\n      <h4>${paletteTitles[e]}</h4>\n      <div class="palettes">\n        ${renderColors(e)}\n      </div>\n    </article>`,updateColor(this.shadowRoot.querySelectorAll("input"))}}function renderColors(e){let t="";for(let l=0;l<5;l++)t+=`<input type="color" id="${e}-col${l+1}" value="#${localTheme.palettes[e]["col"+(l+1)]}" />`;return t}function updateColor(e){let t=localTheme;for(let l=0;l<e.length;l++)e[l].addEventListener("input",(function(){t.palettes[e[l].id.substring(0,4)][e[l].id.slice(-4)]=e[l].value.substring(1),updateStorage(t)}))}customElements.define("palette-picker",palettePicker);